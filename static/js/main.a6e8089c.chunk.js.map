{"version":3,"sources":["UserContext.js","NavBar.js","Form.js","CompanyCard.js","api.js","JobCard.js","List.js","Jobs.js","Companies.js","Register.js","Profile.js","Login.js","Home.js","CompanyDetails.js","Routes.js","JoblyApp.js","App.js","reportWebVitals.js","index.js"],"names":["UserContext","React","createContext","NavBar","useContext","user","removeUser","className","to","onClick","Form","defaultData","formElements","updateData","live","reduce","o","p","useState","formData","setFormData","valid","setValid","debounce","useCallback","_","handleChange","evt","target","name","value","d","validate","Object","values","includes","camelCaseToLabel","str","strArr","split","i","toUpperCase","join","slice","useEffect","onSubmit","preventDefault","map","l","htmlFor","onChange","type","style","color","CompanyCard","description","handle","logoUrl","src","alt","BASE_URL","process","REACT_APP_BASE_URL","JoblyApi","endpoint","data","method","console","log","url","headers","Authorization","token","params","axios","error","response","message","Array","isArray","this","request","res","company","username","jobId","companies","jobs","JobCard","id","title","companyName","salary","equity","apps","classList","contains","applyToJob","innerHTML","unapply","toggle","has","List","list","other","iPerPg","page","setPage","length","Jobs","setJobs","setApps","searchTerms","a","getAllJobs","resp","getUser","userResult","Set","applications","getJobs","minSalary","hasEquity","Companies","setCompanies","getAllCompanies","getCompanies","minEmployees","maxEmployees","Register","updateUser","register","Profile","updated","setUpdated","userDetails","setUserDetails","userResults","getDetails","update","firstName","lastName","email","password","Login","errorMsg","setErrorMsg","login","class","role","Home","CompanyDetails","useParams","cDetails","setCDetails","getCompany","getCompanyAndApps","Routes","path","JoblyApp","history","useHistory","initToken","localStorage","getItem","jwt","decode","setUser","Provider","push","clear","setItem","App","basename","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ifAIeA,G,OAFKC,IAAMC,iB,OCoCXC,MAjCf,WAAmB,IAAD,EACWC,qBAAWJ,GAA/BK,EADS,EACTA,KAAMC,EADG,EACHA,WAMb,OAAGD,EAEC,sBAAKE,UAAU,SAAf,UACE,cAAC,IAAD,CAAMA,UAAU,OAAOC,GAAG,IAA1B,kBAGA,sBAAKD,UAAU,cAAf,UACE,cAAC,IAAD,CAASC,GAAG,aAAZ,uBACA,cAAC,IAAD,CAASA,GAAG,QAAZ,kBACA,cAAC,IAAD,CAASA,GAAG,WAAZ,qBACA,mBAAGD,UAAU,SAASE,QAd9B,WACEH,KAaM,0BAON,sBAAKC,UAAU,SAAf,UACE,cAAC,IAAD,CAAMA,UAAU,OAAOC,GAAG,IAA1B,kBACA,sBAAKD,UAAU,cAAf,UACE,cAAC,IAAD,CAASC,GAAG,SAAZ,mBACA,cAAC,IAAD,CAASA,GAAG,YAAZ,6B,wDCqCOE,MAnEf,YAAwE,IAAxDC,EAAuD,EAAvDA,YAAaC,EAA0C,EAA1CA,aAAcC,EAA4B,EAA5BA,WAA4B,IAAhBC,YAAgB,SACrEH,EAAcA,GAAeC,EAAaG,QAAO,SAACC,EAAGC,GAAJ,mBAAC,eAAeD,GAAhB,kBAAoBC,EAAI,OAAO,IADX,MAErCC,mBAASP,GAF4B,mBAE9DQ,EAF8D,KAEpDC,EAFoD,OAG3CF,oBAAS,GAHkC,mBAG9DG,EAH8D,KAGvDC,EAHuD,KAK/DC,EAAWC,sBAAYC,IAAEF,SAASV,EAAY,KAAM,CAACA,IAqB3D,SAASa,EAAaC,GAAM,IAAD,EACDA,EAAIC,OAApBC,EADiB,EACjBA,KAAMC,EADW,EACXA,MACdV,GAAY,SAAAW,GAAC,kCAAUA,GAAV,kBAAcF,EAAOC,OAGpC,SAASE,IACPV,GAAUW,OAAOC,OAAOf,GAAUgB,SAAS,KAG7C,SAASC,EAAiBC,GACxB,IAAIC,EAASD,EAAIE,MAAM,IACvB,IAAK,IAAIC,KAAKF,EACRA,EAAOE,GAAGC,gBAAkBH,EAAOE,KACrCF,EAAOE,GAAK,IAAMF,EAAOE,IAG7B,OAAOF,EAAO,GAAGG,cAAgBH,EAAOI,KAAK,IAAIC,MAAM,GAGzD,OAvBAC,qBAAU,WACJ9B,GAAQK,IAAaR,IAPzBqB,IACIX,GACFE,EAASJ,MAMV,CAACA,IAsBF,qBAAKZ,UAAU,eAAf,SACE,uBAAMsC,SAxCV,SAAsBlB,GACpBK,IACIL,GAAKA,EAAImB,iBACTzB,GACFR,EAAWM,IAoCmBZ,UAAU,OAAxC,UACGK,EAAamC,KAAI,SAAAC,GAAC,OACjB,sBAAazC,UAAU,OAAvB,UACE,uBAAOA,UAAU,aAAa0C,QAASD,EAAvC,SACGZ,EAAiBY,KACZ,uBACR,uBACEzC,UAAU,eACV2C,SAAUxB,EACVyB,KAAY,aAANH,EAAmB,WAAa,OACtCnB,KAAMmB,EACNlB,MAAOX,EAAS6B,OATVA,MAWV,wBAAQzC,UAAU,kBAAkB4C,KAAK,SAAzC,qBACE9B,GAAS,mBAAG+B,MAAO,CAAEC,MAAO,OAAnB,8BChDNC,MAdf,YAA8D,IAAvCzB,EAAsC,EAAtCA,KAAM0B,EAAgC,EAAhCA,YAAsBC,GAAU,EAAnBC,QAAmB,EAAVD,QAEjD,OACE,qBAAKjD,UAAU,cAAf,SACE,cAAC,IAAD,CAAMC,GAAE,qBAAgBgD,GAAxB,SACE,gCACE,qBAAKE,IAAI,+GAA+GC,IAAK9B,IAC7H,4BAAIA,IACJ,4BAAI0B,Y,oCCRRK,EAAWC,kJAAYC,oBAAsB,6CAU7CC,E,mIAIJ,WAAqBC,GAArB,oGAA+BC,EAA/B,+BAAsC,GAAIC,EAA1C,+BAAmD,MACjDC,QAAQC,IAAI,YAAaJ,EAAUC,EAAMC,GAEnCG,EAHR,UAGiBT,EAHjB,YAG6BI,GACrBM,EAAU,CAAEC,cAAc,UAAD,OAAYR,EAASS,QAC9CC,EAAoB,QAAXP,EAAmBD,EAAO,GAL3C,kBASkBS,IAAM,CAAEL,MAAKH,SAAQD,OAAMQ,SAAQH,YATrD,uCASiEL,MATjE,wCAWIE,QAAQQ,MAAM,aAAc,KAAIC,UAC5BC,EAAU,KAAID,SAASX,KAAKU,MAAME,QAChCC,MAAMC,QAAQF,GAAWA,EAAU,CAACA,GAb9C,0D,sHAqBA,WAAwBrB,GAAxB,uFACkBwB,KAAKC,QAAL,oBAA0BzB,IAD5C,cACM0B,EADN,yBAESA,EAAIC,SAFb,gD,sHAKA,WAAwBC,EAAUC,GAAlC,iFACQL,KAAKC,QAAL,gBAAsBG,EAAtB,iBAAuCC,GAAS,KAAM,QAD9D,gD,qHAGA,WAAqBD,EAAUC,GAA/B,iFACQL,KAAKC,QAAL,gBAAsBG,EAAtB,iBAAuCC,GAAS,KAAM,UAD9D,gD,6HAMA,WAA6BpB,GAA7B,uFACkBe,KAAKC,QAAL,YAA0BhB,GAD5C,cACMiB,EADN,yBAESA,EAAII,WAFb,gD,sHAKA,WAAwBrB,GAAxB,uFACkBe,KAAKC,QAAL,OAAqBhB,GADvC,cACMiB,EADN,yBAESA,EAAIK,MAFb,gD,iHAKA,WAAmBtB,GAAnB,uFACkBe,KAAKC,QAAL,aAA2BhB,EAAM,QADnD,cACMiB,EADN,OAEEnB,EAASS,MAAQU,EAAIV,MAFvB,kBAGSU,GAHT,gD,mHAMA,WAAqBjB,GAArB,uFACkBe,KAAKC,QAAL,gBAAsBhB,EAAKmB,WAD7C,cACMF,EADN,yBAESA,EAAI7E,MAFb,gD,oHAKA,WAAsB4D,GAAtB,uFACkBe,KAAKC,QAAL,gBAA8BhB,EAAM,QADtD,cACMiB,EADN,OAEEnB,EAASS,MAAQU,EAAIV,MAFvB,kBAGSU,GAHT,gD,kHAKA,WAAoBjB,EAAMmB,GAA1B,iEACEJ,KAAKC,QAAL,gBAAsBG,GAAYnB,EAAM,SAD1C,gD,gEAQFF,EAASS,MACP,+JAMaT,QC5DAyB,MA5Bf,YAAoE,IAAjDC,EAAgD,EAAhDA,GAAIC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,YAAaC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,KACjDzF,EAASD,qBAAWJ,GAApBK,KAcR,OACE,sBAAKE,UAAU,UAAf,UACE,4BAAImF,IACJ,4BAAIC,IACJ,kCACE,0CAAaC,KACb,yCAAYC,EAAZ,UAEF,wBAAQpF,QApBZ,SAAqBkB,GAEdA,EAAIC,OAAOmE,UAAUC,SAAS,eAIjCjC,EAASkC,WAAW5F,EAAK+E,SAAUK,GACnC9D,EAAIC,OAAOsE,UAAY,YAJvBnC,EAASoC,QAAQ9F,EAAK+E,SAAUK,GAChC9D,EAAIC,OAAOsE,UAAY,SAKzBvE,EAAIC,OAAOmE,UAAUK,OAAO,eAYxB7F,UAAWuF,EAAKO,IAAIZ,GAAM,kBAAoB,6BADhD,SAC+EK,EAAKO,IAAIZ,GAAM,UAAY,cCMjGa,MA9Bf,YAAiD,IAAjCC,EAAgC,EAAhCA,KAAMpD,EAA0B,EAA1BA,KAAMqD,EAAoB,EAApBA,MAAoB,IAAbC,cAAa,MAAN,GAAM,IAEtBvF,mBAAS,GAFa,mBAEvCwF,EAFuC,KAEjCC,EAFiC,KAM9C,OACE,gCACE,qBAAKpG,UAAU,OAAf,SACGgG,EAAK5D,OAAO+D,EAAO,GAAKD,EAAQC,EAAOD,GAAQ1D,KAAI,SAAAC,GAAC,MAAc,YAATG,EACrD,cAAC,EAAD,eAAgCH,GAAdA,EAAEQ,QACpB,cAAC,EAAD,2BAAwBR,GAAxB,IAA2B8C,KAAMU,IAAnBxD,EAAEyC,SAGrB,gCACGiB,EAAO,GAAK,wBACTnG,UAAU,oBACVE,QAAS,kBAAMkG,GAAQ,SAAA1F,GAAC,OAAIA,EAAI,MAFvB,kBAKb,yCAAYyF,KACJ,GAAPA,GAAaH,EAAKK,QAAU,wBAC3BrG,UAAU,oBACVE,QAAS,kBAAMkG,GAAQ,SAAA1F,GAAC,OAAIA,EAAI,MAFL,4BC4BxB4F,MA/Cf,WAAiB,IAAD,EACU3F,qBADV,mBACPqE,EADO,KACDuB,EADC,OAEU5F,mBAAS,MAFnB,mBAEP4E,EAFO,KAEDiB,EAFC,KAGN1G,EAASD,qBAAWJ,GAApBK,KAHM,4CAkBd,WAA4B2G,GAA5B,eAAAC,EAAA,sEAEqBlD,EAASmD,WAAWF,GAFzC,OAEQG,EAFR,OAGEL,EAAQK,GAHV,4CAlBc,sBA0Bd,OApBAvE,qBAAU,WAAM,4CACd,8BAAAqE,EAAA,sEACqBlD,EAASmD,aAD9B,cACQ3B,EADR,gBAE2BxB,EAASqD,QAAQ/G,GAF5C,OAEQgH,EAFR,OAGEN,EAAQ,IAAIO,IAAID,EAAWE,eAC3BT,EAAQvB,GAJV,4CADc,uBAAC,WAAD,wBAOdiC,KACC,CAACnH,IAaF,qBAAKE,UAAU,OAAf,SAEGgF,EAEC,gCACE,qBAAKhF,UAAU,cAAf,SACE,cAAC,EAAD,CACEM,WAlCE,4CAmCFD,aAAc,CAAC,QAAS,YAAa,aACrCD,YAAa,CAAE+E,MAAO,GAAI+B,UAAW,UAAWC,WAAW,GAC3D5G,MAAM,MAGV,cAAC,EAAD,CAAMyF,KAAMhB,EAAMiB,MAAOV,EAAM3C,KAAK,WAGpC,oBAAIC,MAAO,CAACC,MAAO,UAAnB,wBCXKsE,MAjCf,WAAsB,IAAD,EAEezG,mBAAS,MAFxB,mBAEZoE,EAFY,KAEDsC,EAFC,iDAYnB,WAA4BZ,GAA5B,eAAAC,EAAA,sEACqBlD,EAAS8D,gBAAgBb,GAD9C,OACQG,EADR,OAEES,EAAaT,GAFf,4CAZmB,sBAkBnB,OAdAvE,qBAAU,WAAM,4CACd,4BAAAqE,EAAA,sEACqBlD,EAAS8D,kBAD9B,OACQV,EADR,OAEES,EAAaT,GAFf,4CADc,uBAAC,WAAD,wBAKdW,KACC,IASD,qBAAKvH,UAAU,YAAf,SACG+E,EAEC,gCACE,qBAAK/E,UAAU,cAAf,SACE,cAAC,EAAD,CAAMM,WAxBG,4CAwBuBD,aAAc,CAAC,OAAQ,eAAgB,gBACrED,YAAa,CAAEkB,KAAM,GAAIkG,aAAc,IAAKC,aAAc,YAAclH,MAAM,MAElF,cAAC,EAAD,CAAMyF,KAAMjB,EAAWnC,KAAK,eAE5B,oBAAIC,MAAO,CAACC,MAAO,UAAnB,wBCZK4E,MAjBf,WAAqB,IACZC,EAAc9H,qBAAWJ,GAAzBkI,WADW,4CAGlB,WAAwBjE,GAAxB,iBAAAgD,EAAA,sEAC0BlD,EAASoE,SAASlE,GAD5C,gBACUO,EADV,EACUA,MACR0D,EAAW1D,GAFb,4CAHkB,sBAQlB,OACE,sBAAKjE,UAAU,2BAAf,UACE,yCACA,cAAC,EAAD,CACEM,WAZY,4CAaZD,aAAc,CAAC,WAAY,WAAY,YAAa,WAAY,eCkCzDwH,MA/Cf,WAAoB,IAAD,EACalH,oBAAS,GADtB,mBACVmH,EADU,KACDC,EADC,OAEqBpH,mBAAS,MAF9B,mBAEVqH,EAFU,KAEGC,EAFH,KAGTnI,EAASD,qBAAWJ,GAApBK,KAiBR,OAfAuC,qBAAW,WAAK,4CACd,4BAAAqE,EAAA,sEAE4BlD,EAASqD,QAAQ/G,GAF7C,OAEQoI,EAFR,OAGED,EAAeC,GAHjB,4CADc,uBAAC,WAAD,wBAMdC,KACA,IASA,8BACGH,EAEG,sBAAKhI,UAAU,0BAAf,UACG8H,GAAW,mBAAGjF,MAAO,CAAEC,MAAO,QAAnB,sBACZ,yCACA,yCACA,4BAAIkF,EAAYnD,WAChB,cAAC,EAAD,CACEvE,WAfZ,SAAsBM,GACpB4C,EAAS4E,OAAOxH,EAAUd,EAAK+E,UAC/BkD,GAAW,IAcD1H,aAAc,CAAC,YAAa,WAAY,QAAS,YACjDD,YAAa,CACXiI,UAAWL,EAAYK,UACvBC,SAAUN,EAAYM,SACtBC,MAAOP,EAAYO,MACnBC,SAAU,SAIhB,wCCfKC,MAzBf,WAAkB,IACRd,EAAe9H,qBAAWJ,GAA1BkI,WADO,EAEiBhH,mBAAS,IAF1B,mBAER+H,EAFQ,KAEEC,EAFF,iDAIf,WAAqBjF,GAArB,iBAAAgD,EAAA,+EAE4BlD,EAASoF,MAAMlF,GAF3C,gBAEYO,EAFZ,EAEYA,MACR0D,EAAW1D,GAHf,gDAKI0E,EAAY,KAAE,IALlB,0DAJe,sBAaf,OACE,sBAAK3I,UAAU,wBAAf,UACE,uCACC0I,GACC,qBAAKG,MAAM,qBAAqBC,KAAK,QAArC,SACGJ,IAGL,cAAC,EAAD,CAAMpI,WArBK,4CAqBcD,aAAc,CAAC,WAAY,kBCI3C0I,MA1Bf,WAAiB,IACPjJ,EAASD,qBAAWJ,GAApBK,KAER,OACE,sBAAKE,UAAU,OAAf,UACE,uCACA,uEACCF,EACC,8CAAiBA,EAAK+E,SAAtB,OAEA,gCACE,cAAC,IAAD,CAAM5E,GAAG,SAAT,SACE,wBAAQ2C,KAAK,SAAS5C,UAAU,kBAAhC,sBAIF,cAAC,IAAD,CAAMC,GAAG,YAAT,SACE,wBAAQ2C,KAAK,SAAS5C,UAAU,kBAAhC,+BCsBGgJ,MArCf,WAA2B,IACjB/F,EAAWgG,cAAXhG,OACAnD,EAASD,qBAAWJ,GAApBK,KAFgB,EAGQa,mBAAS,MAHjB,mBAGjBuI,EAHiB,KAGPC,EAHO,OAIAxI,mBAAS,MAJT,mBAIjB4E,EAJiB,KAIXiB,EAJW,KAqBxB,OAdAnE,qBAAU,WAAM,4CACd,8BAAAqE,EAAA,+EAE0BlD,EAAS4F,WAAWnG,GAF9C,OAEU2B,EAFV,OAGIuE,EAAYvE,GAHhB,gDAKIhB,QAAQC,IAAR,MALJ,yBAO2BL,EAASqD,QAAQ/G,GAP5C,QAOQgH,EAPR,OAQEN,EAAQ,IAAIO,IAAID,EAAWE,eAR7B,0DADc,uBAAC,WAAD,wBAWdqC,KACC,CAACvJ,EAAMmD,IAENsC,EAGF,8BACG2D,EACI,sBAAKlJ,UAAU,iBAAf,UACC,6BAAKkJ,EAAS5H,OACd,4BAAI4H,EAASlG,cACb,cAAC,EAAD,CAAMgD,KAAMkD,EAASlE,KAAMpC,KAAK,OAAOqD,MAAOV,OAEhD,yDAVS,2CCCJ+D,MAjBf,WAAmB,IACTxJ,EAASD,qBAAWJ,GAApBK,KAIR,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyJ,KAAK,SAAZ,SAAqB,cAAC,EAAD,MACrB,cAAC,IAAD,CAAOA,KAAK,YAAZ,SAAwB,cAAC,EAAD,MACxB,cAAC,IAAD,CAAOA,KAAK,qBAAZ,SAAkC,kBAAMzJ,EAAO,cAAC,EAAD,IAAqB,cAAC,IAAD,CAAUG,GAAG,SACjF,cAAC,IAAD,CAAOsJ,KAAK,aAAZ,SAA0B,kBAAMzJ,EAAO,cAAC,EAAD,IAAgB,cAAC,IAAD,CAAUG,GAAG,SACpE,cAAC,IAAD,CAAOsJ,KAAK,QAAZ,SAAqB,kBAAMzJ,EAAO,cAAC,EAAD,IAAW,cAAC,IAAD,CAAUG,GAAG,SAC1D,cAAC,IAAD,CAAOsJ,KAAK,WAAZ,SAAwB,kBAAMzJ,EAAO,cAAC,EAAD,IAAc,cAAC,IAAD,CAAUG,GAAG,SAChE,cAAC,IAAD,CAAOsJ,KAAK,IAAZ,SAAgB,cAAC,EAAD,U,wBCYPC,MA5Bf,WACE,IAAMC,EAAUC,cACVC,EAAYC,aAAaC,QAAQ,SAFrB,EAGMlJ,mBAASgJ,EAAS,aAAK1F,MAAO0F,GAAcG,IAAIC,OAAOJ,IAAe,MAH5E,mBAGX7J,EAHW,KAGLkK,EAHK,KAiBlB,OACE,qBAAKhK,UAAU,WAAf,SACE,eAAC,EAAYiK,SAAb,CAAsB1I,MAAO,CAAEzB,OAAMC,WARzC,WACEiK,EAAQ,MACRP,EAAQS,KAAK,KACbN,aAAaO,SAKsCxC,WAdrD,SAAoB1D,GAClB+F,EAAQ,aAAE/F,SAAU6F,IAAIC,OAAO9F,KAC/BwF,EAAQS,KAAK,KACbN,aAAaQ,QAAQ,QAASnG,KAW5B,UACE,cAAC,EAAD,IACA,qBAAKjE,UAAU,eAAf,SACE,cAAC,EAAD,YCnBKqK,MARf,WACE,OACE,cAAC,IAAD,CAAeC,SAAS,kBAAxB,SACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a6e8089c.chunk.js","sourcesContent":["import React from \"react\";\n\nconst UserContext = React.createContext();\n\nexport default UserContext;","import { useContext } from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport \"./NavBar.css\";\nimport UserContext from './UserContext';\n\nfunction NavBar() {\n  const {user, removeUser} = useContext(UserContext)\n\n  function logout() {\n    removeUser();\n  }\n\n  if(user){\n    return (\n      <nav className=\"NavBar\">\n        <Link className=\"home\" to=\"/\">\n          Home\n        </Link>\n        <div className=\"NavBarRight\">\n          <NavLink to=\"/companies\">Companies</NavLink>\n          <NavLink to=\"/jobs\">Jobs</NavLink>\n          <NavLink to=\"/profile\">Profile</NavLink>\n          <a className=\"logout\" onClick={logout}>Logout</a>\n        </div>\n      </nav>\n    );\n  }\n  \n  return (\n    <nav className=\"NavBar\">\n      <Link className=\"home\" to=\"/\">Home</Link>\n      <div className=\"NavBarRight\">\n        <NavLink to=\"/login\">Login</NavLink>\n        <NavLink to=\"/register\">Register</NavLink>\n      </div>\n    </nav>\n  );\n}\nexport default NavBar;","import { useCallback, useEffect, useState } from \"react\";\nimport _ from \"lodash\";\n\nfunction Form({ defaultData, formElements, updateData, live = false }) {\n  defaultData = defaultData || formElements.reduce((o, p) => ({ ...o, [p]: \"\" }), {});\n  const [formData, setFormData] = useState(defaultData);\n  const [valid, setValid] = useState(true);\n\n  const debounce = useCallback(_.debounce(updateData, 800), [updateData]);\n  \n  function handleSubmit(evt) {\n    validate();\n    if (evt) evt.preventDefault();\n    if (valid) {\n      updateData(formData);\n    }\n  }\n\n  function handleLiveSubmit() {\n    validate();\n    if (valid) {\n      debounce(formData);\n    }\n  }\n\n  useEffect(() => {\n    if (live && formData !== defaultData) handleLiveSubmit()\n  }, [formData])\n\n  function handleChange(evt) {\n    const { name, value } = evt.target;\n    setFormData(d => ({ ...d, [name]: value }));\n  }\n\n  function validate() {\n    setValid(!Object.values(formData).includes(\"\"));\n  }\n\n  function camelCaseToLabel(str) {\n    let strArr = str.split('');\n    for (let i in strArr){\n      if (strArr[i].toUpperCase() === strArr[i]) {\n        strArr[i] = \" \" + strArr[i];\n      }\n    }\n    return strArr[0].toUpperCase() + strArr.join(\"\").slice(1);\n  }\n\n  return (\n    <div className=\"default-form\">\n      <form onSubmit={handleSubmit} className=\"Form\">\n        {formElements.map(l => (\n          <div key={l} className=\"mb-2\">\n            <label className=\"form-label\" htmlFor={l}>\n              {camelCaseToLabel(l)}\n            </label><br />\n            <input\n              className=\"form-control\"\n              onChange={handleChange}\n              type={l === \"password\" ? \"password\" : \"text\"}\n              name={l}\n              value={formData[l]} />\n          </div>))}\n          <button className=\"btn btn-primary\" type=\"submit\">Submit</button>\n          {!valid && <p style={{ color: \"red\" }}>Not Valid!</p>}\n      </form>\n    </div>\n  )\n}\n\nexport default Form;","import { Link } from \"react-router-dom\";\n\nfunction CompanyCard({ name, description, logoUrl, handle }) {\n  \n  return (\n    <div className=\"CompanyCard\">\n      <Link to={`/companies/${handle}`}>\n        <div>\n          <img src=\"https://photoadking.s3.amazonaws.com/photoadking/webp_thumbnail/5e70652c6b5ae_template_image_1584424236.webp\" alt={name}></img>\n          <b>{name}</b>\n          <p>{description}</p>\n        </div>\n      </Link>\n    </div>\n  );\n}\nexport default CompanyCard;","import axios from \"axios\";\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"https://jobly-marcus-n-chase.herokuapp.com\";\n\n/** API Class.\n *\n * Static class tying together methods used to get/send to to the API.\n * There shouldn't be any frontend-specific stuff here, and there shouldn't\n * be any API-aware stuff elsewhere in the frontend.\n *\n */\n\nclass JoblyApi {\n  // the token for interactive with the API will be stored here.\n  static token;\n\n  static async request(endpoint, data = {}, method = \"get\") {\n    console.log(\"API Call:\", endpoint, data, method);\n\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = { Authorization: `Bearer ${JoblyApi.token}` };\n    const params = method === \"get\" ? data : {};\n\n\n    try {\n      return (await axios({ url, method, data, params, headers })).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  // Individual API routes\n\n  /** Get details on a company by handle. */\n\n  static async getCompany(handle) {\n    let res = await this.request(`companies/${handle}`);\n    return res.company;\n  }\n\n  static async applyToJob(username, jobId) {\n    await this.request(`users/${username}/jobs/${jobId}`, null, \"post\")\n  }\n  static async unapply(username, jobId) {\n    await this.request(`users/${username}/jobs/${jobId}`, null, \"delete\")\n  }\n\n  // static async request(endpoint, data = {}, method = \"get\")\n\n  static async getAllCompanies(data) {\n    let res = await this.request(`companies`, data);\n    return res.companies;\n  }\n\n  static async getAllJobs(data) {\n    let res = await this.request(`jobs`, data);\n    return res.jobs;\n  }\n\n  static async login(data) {\n    let res = await this.request(`auth/token`, data, \"post\");\n    JoblyApi.token = res.token;\n    return res;\n  }\n\n  static async getUser(data) {\n    let res = await this.request(`users/${data.username}`);\n    return res.user;\n  }\n\n  static async register(data) {\n    let res = await this.request(`auth/register`, data, \"post\");\n    JoblyApi.token = res.token;\n    return res;\n  }\n  static async update(data, username) {\n    this.request(`users/${username}`, data, \"patch\");\n  }\n\n  // obviously, you'll add a lot here ...\n}\n\n// for now, put token (\"testuser\" / \"password\" on class)\nJoblyApi.token =\n  \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZ\" +\n  \"SI6InRlc3R1c2VyIiwiaXNBZG1pbiI6ZmFsc2UsImlhdCI6MTU5ODE1OTI1OX0.\" +\n  \"FtrMwBQwe6Ue-glIFgz_Nf8XxRT2YecFCiSpYL0fCXc\";\n\n  \n\nexport default JoblyApi;","import { useContext } from \"react\";\nimport JoblyApi from \"./api\";\nimport UserContext from \"./UserContext\";\n\nfunction JobCard({ id, title, companyName, salary, equity, apps }) {\n  const { user } = useContext(UserContext);\n\n  function handleClick(evt) {\n    //toggle apply\n    if (!evt.target.classList.contains(\"btn-danger\")) {\n      JoblyApi.unapply(user.username, id);\n      evt.target.innerHTML = \"Apply\";\n    } else {\n      JoblyApi.applyToJob(user.username, id);\n      evt.target.innerHTML = \"Applied\";\n    }\n    evt.target.classList.toggle(\"btn-danger\");\n  }\n\n  return ( \n    <div className=\"JobCard\">\n      <b>{title}</b>\n      <p>{companyName}</p>\n      <small>\n        <p>Salary: ${salary}</p>\n        <p>Equity: {equity}%</p>\n      </small>\n      <button onClick={handleClick}\n        className={apps.has(id) ? \"btn btn-success\" : \"btn btn-success btn-danger\"}>{apps.has(id) ? \"Applied\" : \"Apply\"}</button>\n    </div>\n  );\n}\nexport default JobCard;","import CompanyCard from './CompanyCard';\nimport JobCard from './JobCard';\nimport { useState } from 'react';\n\nfunction List({ list, type, other, iPerPg=20 }) {\n\n  const [page, setPage] = useState(1);\n\n  \n\n  return (\n    <div>\n      <div className=\"List\">\n        {list.slice((page - 1) * iPerPg, page * iPerPg).map(l =>  type === \"company\" \n          ? (<CompanyCard key={l.handle} {...l} />) \n          : (<JobCard key={l.id} {...l} apps={other} />)\n        )}\n      </div>\n        <div>\n          {page > 1 && <button\n              className=\"btn btn-secondary\"\n              onClick={() => setPage(p => p - 1)}>\n              Back\n            </button>}\n          <span>Page {page}</span>\n          {page * 20 <= list.length && <button\n            className=\"btn btn-secondary\"\n            onClick={() => setPage(p => p + 1)}>\n            Forward\n            </button>}\n      </div>\n    </div>\n  );\n}\nexport default List;","import { useState, useEffect, useContext } from \"react\";\nimport Form from \"./Form\";\nimport List from \"./List\";\nimport JoblyApi from \"./api\";\nimport UserContext from \"./UserContext\";\n\nfunction Jobs() {\n  const [jobs, setJobs] = useState();\n  const [apps, setApps] = useState(null)\n  const { user } = useContext(UserContext);\n\n\n  useEffect(() => {\n    async function getJobs() {\n      const jobs = await JoblyApi.getAllJobs();\n      const userResult = await JoblyApi.getUser(user);\n      setApps(new Set(userResult.applications))\n      setJobs(jobs);\n    }\n    getJobs();\n  }, [user]);\n\n  //\n\n  async function submitSearch(searchTerms) {\n    // search by equity and salary\n    const resp = await JoblyApi.getAllJobs(searchTerms);\n    setJobs(resp);\n  }\n\n\n  // maybe rework our form to accept an array of these: { name: label: type: value: validation:}\n  return (\n    <div className=\"Jobs\">\n      {/* Add spinner */}\n      {jobs \n        ? (\n        <div>\n          <div className=\"search-form\">\n            <Form\n              updateData={submitSearch}\n              formElements={[\"title\", \"minSalary\", \"hasEquity\"]}\n              defaultData={{ title: \"\", minSalary: \"1000000\", hasEquity: true }}\n              live={true}\n            />\n          </div>\n          <List list={jobs} other={apps} type=\"job\" />\n        </div>\n      )\n        : <h1 style={{color: 'orange'}}>Loading</h1>}\n    </div>\n  );\n}\nexport default Jobs;\n","import { useEffect, useState } from 'react';\nimport Form from './Form';\nimport List from './List';\nimport JoblyApi from './api';\n\nfunction Companies() {\n  \n  const [companies, setCompanies] = useState(null);\n\n  useEffect(() => {\n    async function getCompanies() {\n      const resp = await JoblyApi.getAllCompanies();\n      setCompanies(resp);\n    }\n    getCompanies();\n  }, [])\n\n  async function submitSearch(searchTerms) {\n    const resp = await JoblyApi.getAllCompanies(searchTerms);\n    setCompanies(resp);\n  }\n\n  \n  return (\n    <div className=\"Companies\">\n      {companies \n        ? (\n        <div>\n          <div className=\"search-form\">\n            <Form updateData={submitSearch} formElements={[\"name\", \"minEmployees\", \"maxEmployees\"]}\n              defaultData={{ name: \"\", minEmployees: \"0\", maxEmployees: \"10000000\" }} live={true}/>\n          </div>\n          <List list={companies} type=\"company\"/>\n      </div>)\n        : <h1 style={{color: 'orange'}}>Loading</h1>}\n    </div>\n  );\n}\nexport default Companies;","import Form from \"./Form\";\nimport JoblyApi from \"./api\"\nimport { useContext } from \"react\";\nimport UserContext from \"./UserContext\";\n\nfunction Register() {\n  const {updateUser} = useContext(UserContext)\n  \n  async function register(data) {\n    const { token } = await JoblyApi.register(data);\n    updateUser(token);\n  }\n  \n  return (\n    <div className=\"Register default-content\">\n      <h2>Sign Up</h2>\n      <Form\n        updateData={register}\n        formElements={[\"username\", \"password\", \"firstName\", \"lastName\", \"email\"]} />\n    </div>\n  );\n}\nexport default Register;","import { useContext, useEffect, useState } from 'react';\nimport JoblyApi from './api';\nimport Form from './Form';\nimport UserContext from './UserContext';\n\nfunction Profile() {\n  const [updated, setUpdated] = useState(false);\n  const [userDetails, setUserDetails] = useState(null);\n  const { user } = useContext(UserContext)\n\n  useEffect( ()=> {\n    async function getDetails() {\n\n      const userResults = await JoblyApi.getUser(user)\n      setUserDetails(userResults);\n    }\n    getDetails()\n  },[])\n\n\n  function handleUpdate(formData) {\n    JoblyApi.update(formData, user.username);\n    setUpdated(true);\n  }\n\n  return (\n    <div>\n      {userDetails\n        ? (\n          <div className=\"Profile default-content\">\n            {updated && <p style={{ color: \"blue\" }}>updated!</p>}\n            <h1>Profile</h1>\n            <b>Username</b>\n            <p>{userDetails.username}</p>\n            <Form\n              updateData={handleUpdate}\n              formElements={[\"firstName\", \"lastName\", \"email\", \"password\"]}\n              defaultData={{\n                firstName: userDetails.firstName,\n                lastName: userDetails.lastName,\n                email: userDetails.email,\n                password: \"\"\n              }}\n            />\n          </div>)\n        : <p>None</p>\n      }\n    </div>\n    \n    \n  );\n}\nexport default Profile;","import Form from \"./Form\";\nimport JoblyApi from './api';\nimport { useContext, useState } from \"react\";\nimport UserContext from \"./UserContext\";\n\nfunction Login() {\n  const { updateUser } = useContext(UserContext)\n  const [errorMsg, setErrorMsg] = useState(\"\");\n \n  async function login(data) {\n    try {\n      const { token } = await JoblyApi.login(data);\n      updateUser(token);\n    } catch (e) {\n      setErrorMsg(e[0]);\n    }\n  }\n\n  return (\n    <div className=\"Login default-content\">\n      <h2>Login</h2>\n      {errorMsg && (\n        <div class=\"alert alert-danger\" role=\"alert\">\n          {errorMsg}\n        </div>\n      )}\n      <Form updateData={login} formElements={[\"username\", \"password\"]} />\n    </div>\n  );\n}\nexport default Login;","import { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport UserContext from './UserContext';\n\nfunction Home() {\n  const { user } = useContext(UserContext)\n\n  return (\n    <div className=\"Home\">\n      <h1>Jobly</h1>\n      <p>All the jobs in one, convenient place.</p>\n      {user ? (\n        <p>Welcome Back {user.username}!</p>\n      ) : (\n        <div>\n          <Link to=\"/login\">\n            <button type=\"button\" className=\"btn btn-primary\">\n              Log In\n            </button>\n          </Link>\n          <Link to=\"/register\">\n            <button type=\"button\" className=\"btn btn-primary\">\n              Register\n            </button>\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n}\nexport default Home;","import { useEffect, useState, useContext } from \"react\";\nimport { useParams } from \"react-router\";\nimport JoblyApi from \"./api\";\nimport List from './List';\nimport UserContext from \"./UserContext\";\n\nfunction CompanyDetails() {\n  const { handle } = useParams();\n  const { user } = useContext(UserContext);\n  const [cDetails, setCDetails] = useState(null);\n  const [apps, setApps] = useState(null)\n\n\n  useEffect(() => {\n    async function getCompanyAndApps() {\n      try {\n        const company = await JoblyApi.getCompany(handle);\n        setCDetails(company)\n      } catch (e) {\n        console.log(e)\n      }\n      const userResult = await JoblyApi.getUser(user);\n      setApps(new Set(userResult.applications))\n    }\n    getCompanyAndApps();\n  }, [user, handle]);\n\n  if(!apps) return <div>Loading</div>\n\n  return (\n    <div>\n      {cDetails\n        ? (<div className=\"CompanyDetails\">\n            <h2>{cDetails.name}</h2>\n            <p>{cDetails.description}</p>\n            <List list={cDetails.jobs} type=\"jobs\" other={apps}/>\n          </div>)\n        : <p>Company does not exist</p>\n      }\n    </div>\n\n  );\n}\nexport default CompanyDetails;","import { Redirect, Route, Switch } from \"react-router\";\nimport Jobs from \"./Jobs\";\nimport Companies from \"./Companies\";\nimport Register from \"./Register\";\nimport Profile from \"./Profile\";\nimport Login from \"./Login\";\nimport Home from \"./Home\";\nimport CompanyDetails from \"./CompanyDetails\";\nimport { useContext } from \"react\";\nimport UserContext from \"./UserContext\";\n\nfunction Routes() {\n  const { user } = useContext(UserContext);\n\n  // !!how does our redirect look?\n\n  return (\n    <Switch>\n      <Route path=\"/login\"><Login /></Route>\n      <Route path=\"/register\"><Register /></Route>\n      <Route path=\"/companies/:handle\">{() => user ? <CompanyDetails /> : <Redirect to=\"/\" />}</Route>\n      <Route path=\"/companies\">{() => user ? <Companies /> : <Redirect to=\"/\" />}</Route>\n      <Route path=\"/jobs\">{() => user ? <Jobs /> : <Redirect to=\"/\" />}</Route>\n      <Route path=\"/profile\">{() => user ? <Profile /> : <Redirect to=\"/\" />}</Route>\n      <Route path=\"/\"><Home /></Route>\n    </Switch>\n  );\n}\nexport default Routes;","import { useState } from \"react\";\nimport NavBar from \"./NavBar\";\nimport Routes from \"./Routes\";\nimport jwt from 'jsonwebtoken';\nimport { useHistory } from \"react-router\";\nimport \"./JoblyApp.css\";\nimport UserContext from \"./UserContext\";\n\nfunction JoblyApp() {\n  const history = useHistory();\n  const initToken = localStorage.getItem('token');\n  const [user, setUser] = useState(initToken ? { token: initToken, ...jwt.decode(initToken) } : null);\n\n  function updateUser(token) {\n    setUser({ token, ...jwt.decode(token) });\n    history.push('/');\n    localStorage.setItem('token', token);\n  }\n\n  function removeUser() {\n    setUser(null);\n    history.push('/');\n    localStorage.clear();\n  }\n\n  return (\n    <div className=\"JoblyApp\">\n      <UserContext.Provider value={{ user, removeUser, updateUser }}>\n        <NavBar />\n        <div className=\"JoblyContent\">\n          <Routes />\n        </div>\n      </UserContext.Provider>\n    </div>\n  );\n}\nexport default JoblyApp;","import JoblyApp from './JoblyApp';\nimport {BrowserRouter} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <BrowserRouter basename='/Jobly-frontend'>\n      <JoblyApp/>\n    </BrowserRouter>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}